<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mybatis.one.mapper.DBZNContactMapper" >
  <resultMap id="BaseResultMap" type="mybatis.one.po.DBZNContact" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="seqid" property="seqid" jdbcType="INTEGER" />
    <result column="batchid" property="batchid" jdbcType="VARCHAR" />
    <result column="caseno" property="caseno" jdbcType="VARCHAR" />
    <result column="serino" property="serino" jdbcType="VARCHAR" />
    <result column="prelation" property="prelation" jdbcType="VARCHAR" />
    <result column="pname" property="pname" jdbcType="VARCHAR" />
    <result column="ptel" property="ptel" jdbcType="VARCHAR" />
    <result column="telck" property="telck" jdbcType="VARCHAR" />
    <result column="ptel1" property="ptel1" jdbcType="VARCHAR" />
    <result column="tel1ck" property="tel1ck" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    seqid, batchid, caseno, serino, prelation, pname, ptel, telck, ptel1, tel1ck
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="mybatis.one.po.DBZNContactExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from zncontact
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from zncontact
    where seqid = #{seqid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from zncontact
    where seqid = #{seqid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="mybatis.one.po.DBZNContactExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from zncontact
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="mybatis.one.po.DBZNContact" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into zncontact (seqid, batchid, caseno, 
      serino, prelation, pname, 
      ptel, telck, ptel1, 
      tel1ck)
    values (#{seqid,jdbcType=INTEGER}, #{batchid,jdbcType=VARCHAR}, #{caseno,jdbcType=VARCHAR}, 
      #{serino,jdbcType=VARCHAR}, #{prelation,jdbcType=VARCHAR}, #{pname,jdbcType=VARCHAR}, 
      #{ptel,jdbcType=VARCHAR}, #{telck,jdbcType=VARCHAR}, #{ptel1,jdbcType=VARCHAR}, 
      #{tel1ck,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="mybatis.one.po.DBZNContact" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into zncontact
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="seqid != null" >
        seqid,
      </if>
      <if test="batchid != null" >
        batchid,
      </if>
      <if test="caseno != null" >
        caseno,
      </if>
      <if test="serino != null" >
        serino,
      </if>
      <if test="prelation != null" >
        prelation,
      </if>
      <if test="pname != null" >
        pname,
      </if>
      <if test="ptel != null" >
        ptel,
      </if>
      <if test="telck != null" >
        telck,
      </if>
      <if test="ptel1 != null" >
        ptel1,
      </if>
      <if test="tel1ck != null" >
        tel1ck,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="seqid != null" >
        #{seqid,jdbcType=INTEGER},
      </if>
      <if test="batchid != null" >
        #{batchid,jdbcType=VARCHAR},
      </if>
      <if test="caseno != null" >
        #{caseno,jdbcType=VARCHAR},
      </if>
      <if test="serino != null" >
        #{serino,jdbcType=VARCHAR},
      </if>
      <if test="prelation != null" >
        #{prelation,jdbcType=VARCHAR},
      </if>
      <if test="pname != null" >
        #{pname,jdbcType=VARCHAR},
      </if>
      <if test="ptel != null" >
        #{ptel,jdbcType=VARCHAR},
      </if>
      <if test="telck != null" >
        #{telck,jdbcType=VARCHAR},
      </if>
      <if test="ptel1 != null" >
        #{ptel1,jdbcType=VARCHAR},
      </if>
      <if test="tel1ck != null" >
        #{tel1ck,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="mybatis.one.po.DBZNContactExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from zncontact
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update zncontact
    <set >
      <if test="record.seqid != null" >
        seqid = #{record.seqid,jdbcType=INTEGER},
      </if>
      <if test="record.batchid != null" >
        batchid = #{record.batchid,jdbcType=VARCHAR},
      </if>
      <if test="record.caseno != null" >
        caseno = #{record.caseno,jdbcType=VARCHAR},
      </if>
      <if test="record.serino != null" >
        serino = #{record.serino,jdbcType=VARCHAR},
      </if>
      <if test="record.prelation != null" >
        prelation = #{record.prelation,jdbcType=VARCHAR},
      </if>
      <if test="record.pname != null" >
        pname = #{record.pname,jdbcType=VARCHAR},
      </if>
      <if test="record.ptel != null" >
        ptel = #{record.ptel,jdbcType=VARCHAR},
      </if>
      <if test="record.telck != null" >
        telck = #{record.telck,jdbcType=VARCHAR},
      </if>
      <if test="record.ptel1 != null" >
        ptel1 = #{record.ptel1,jdbcType=VARCHAR},
      </if>
      <if test="record.tel1ck != null" >
        tel1ck = #{record.tel1ck,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update zncontact
    set seqid = #{record.seqid,jdbcType=INTEGER},
      batchid = #{record.batchid,jdbcType=VARCHAR},
      caseno = #{record.caseno,jdbcType=VARCHAR},
      serino = #{record.serino,jdbcType=VARCHAR},
      prelation = #{record.prelation,jdbcType=VARCHAR},
      pname = #{record.pname,jdbcType=VARCHAR},
      ptel = #{record.ptel,jdbcType=VARCHAR},
      telck = #{record.telck,jdbcType=VARCHAR},
      ptel1 = #{record.ptel1,jdbcType=VARCHAR},
      tel1ck = #{record.tel1ck,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="mybatis.one.po.DBZNContact" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update zncontact
    <set >
      <if test="batchid != null" >
        batchid = #{batchid,jdbcType=VARCHAR},
      </if>
      <if test="caseno != null" >
        caseno = #{caseno,jdbcType=VARCHAR},
      </if>
      <if test="serino != null" >
        serino = #{serino,jdbcType=VARCHAR},
      </if>
      <if test="prelation != null" >
        prelation = #{prelation,jdbcType=VARCHAR},
      </if>
      <if test="pname != null" >
        pname = #{pname,jdbcType=VARCHAR},
      </if>
      <if test="ptel != null" >
        ptel = #{ptel,jdbcType=VARCHAR},
      </if>
      <if test="telck != null" >
        telck = #{telck,jdbcType=VARCHAR},
      </if>
      <if test="ptel1 != null" >
        ptel1 = #{ptel1,jdbcType=VARCHAR},
      </if>
      <if test="tel1ck != null" >
        tel1ck = #{tel1ck,jdbcType=VARCHAR},
      </if>
    </set>
    where seqid = #{seqid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="mybatis.one.po.DBZNContact" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update zncontact
    set batchid = #{batchid,jdbcType=VARCHAR},
      caseno = #{caseno,jdbcType=VARCHAR},
      serino = #{serino,jdbcType=VARCHAR},
      prelation = #{prelation,jdbcType=VARCHAR},
      pname = #{pname,jdbcType=VARCHAR},
      ptel = #{ptel,jdbcType=VARCHAR},
      telck = #{telck,jdbcType=VARCHAR},
      ptel1 = #{ptel1,jdbcType=VARCHAR},
      tel1ck = #{tel1ck,jdbcType=VARCHAR}
    where seqid = #{seqid,jdbcType=INTEGER}
  </update>
</mapper>